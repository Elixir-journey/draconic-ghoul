name: CI

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

env:
    MIX_ENV: test

jobs:
    setup:
        runs-on: ubuntu-latest

        steps:
            - name: Check out the code
              uses: actions/checkout@v4

            - name: Set up Elixir
              uses: erlef/setup-beam@v1
              with:
                  elixir-version: "1.18"
                  otp-version: "27"

            - name: Install dependencies
              run: mix deps.get

            - name: Cache dependencies
              uses: actions/cache@v3
              with:
                  path: deps
                  key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-mix-

    linting:
        runs-on: ubuntu-latest
        needs: setup

        steps:
            - name: Check out the code
              uses: actions/checkout@v4

            - name: Set up Elixir
              uses: erlef/setup-beam@v1
              with:
                  elixir-version: "1.18"
                  otp-version: "27"

            - name: Install dependencies (if not cached)
              run: mix deps.get

            - name: Run mix_audit for dependency vulnerabilities
              run: mix deps.audit

            - name: Run formatter check
              run: mix format --check-formatted

            - name: Run Credo for linting
              run: mix credo --strict

            - name: Run Dialyzer for type checking
              run: mix dialyzer
              env:
                  MIX_ENV: dev

            - name: Run Sobelow for security analysis
              run: mix sobelow --config

            - name: Cache Dialyzer PLT
              uses: actions/cache@v3
              with:
                  path: _build/dev/*.plt
                  key: ${{ runner.os }}-dialyzer-plt-${{ hashFiles('**/mix.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-dialyzer-plt-

    docker-check:
        runs-on: ubuntu-latest
        needs: setup

        steps:
            - name: Check out the code
              uses: actions/checkout@v4

            - name: Set up Elixir
              uses: erlef/setup-beam@v1
              with:
                  elixir-version: "1.18"
                  otp-version: "27"

            - name: Build Docker Image
              run: |
                  docker build --rm --tag $(basename $GITHUB_REPOSITORY):latest .

    testing:
        runs-on: ubuntu-latest
        needs: setup

        steps:
            - name: Check out the code
              uses: actions/checkout@v4

            - name: Set up Elixir
              uses: erlef/setup-beam@v1
              with:
                  elixir-version: "1.18"
                  otp-version: "27"

            - name: Install dependencies (if not cached)
              run: mix deps.get

            - name: Run tests
              run: mix test
